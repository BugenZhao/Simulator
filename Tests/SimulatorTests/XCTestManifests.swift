#if !canImport(ObjectiveC)
import XCTest

extension AddressableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AddressableTests = [
        ("testAddressing", testAddressing),
        ("testAddressingError", testAddressingError),
        ("testDump", testDump),
        ("testRegister", testRegister),
    ]
}

extension StaticUnitManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StaticUnitManagerTests = [
        ("testConflictOutput", testConflictOutput),
        ("testDuplicateName", testDuplicateName),
        ("testEcho", testEcho),
        ("testHalt", testHalt),
        ("testLonelyWireExamine", testLonelyWireExamine),
        ("testMemoryAddLogicAndOnRising", testMemoryAddLogicAndOnRising),
        ("testProcedure", testProcedure),
        ("testReadNotDeclaredWire", testReadNotDeclaredWire),
        ("testReadOutputWire", testReadOutputWire),
        ("testRegisterInc", testRegisterInc),
        ("testWriteInputWire", testWriteInputWire),
        ("testWriteNotDeclaredWire", testWriteNotDeclaredWire),
    ]
}

extension UnitManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnitManagerTests = [
        ("testConflictOutput", testConflictOutput),
        ("testDuplicateName", testDuplicateName),
        ("testEcho", testEcho),
        ("testHalt", testHalt),
        ("testLonelyWireExamine", testLonelyWireExamine),
        ("testProcedure", testProcedure),
        ("testReadNotDeclaredWire", testReadNotDeclaredWire),
        ("testReadOutputWire", testReadOutputWire),
        ("testRegisterInc", testRegisterInc),
        ("testWriteInputWire", testWriteInputWire),
        ("testWriteNotDeclaredWire", testWriteNotDeclaredWire),
    ]
}

extension UnitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnitTests = [
        ("testUnitCopy", testUnitCopy),
    ]
}

extension WireManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WireManagerTests = [
        ("testSimple", testSimple),
    ]
}

extension WireTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WireTests = [
        ("testMask", testMask),
        ("testWire", testWire),
        ("testWireCounter", testWireCounter),
        ("testWireError", testWireError),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AddressableTests.__allTests__AddressableTests),
        testCase(StaticUnitManagerTests.__allTests__StaticUnitManagerTests),
        testCase(UnitManagerTests.__allTests__UnitManagerTests),
        testCase(UnitTests.__allTests__UnitTests),
        testCase(WireManagerTests.__allTests__WireManagerTests),
        testCase(WireTests.__allTests__WireTests),
    ]
}
#endif
